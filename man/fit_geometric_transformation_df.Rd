% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_geometric_transformation_df.R
\name{fit_geometric_transformation_df}
\alias{fit_geometric_transformation_df}
\title{Fitting Bidimensional or Tridimensional Regression / Geometric Transformation Models via Two Tables.}
\usage{
fit_geometric_transformation_df(
  iv,
  dv,
  transformation,
  priors = NULL,
  chains = 4,
  cores = NULL,
  ...
)
}
\arguments{
\item{iv}{a data frame containing independent variable, must by numeric only, N×2 or N×3.}

\item{dv}{a data frame containing dependent variable, must by numeric only, N×2 or N×3.}

\item{transformation}{the transformation to be used, either \code{'euclidean'}, \code{'affine'}, or \code{'projective'}.}

\item{priors}{named list of parameters prior distribution. Except for \code{sigma} that uses exponential prior,
all other parameters use normal or transformed normal prior and require parameter pairs. E.g.,
\code{list("translation" = c(0, 10), "sigma"=1)}.}

\item{chains}{Number of chains for sampling.}

\item{cores}{Number of CPU cores to use for sampling. If omitted, all available cores are used.}

\item{...}{Additional arguments passed to \code{\link[rstan:sampling]{sampling}} function.}
}
\description{
Fits Bidimensional or Tridimensional regression / geometric transformation models using
Stan engine. Two sets of coordinates are supplied via \code{iv} (for an independent variable)
and \code{dv} (for the dependent one). The two tables must have the same dimensions
(both N×2 or N×3).

For the 2D data, you can fit \code{"euclidean"} (scale, rotation, and translation),
\code{"affine"} (+shear), or \code{"projective"} (+tilt) transformations. For 3D data, you can fit
\code{"euclidean_x"}, \code{"euclidean_y"}, \code{"euclidean_z"} (scale, rotation around the
specified axis, and translation), \code{"euclidean"} (scale, rotation around all three axes, and translation),
\code{"affine"} (\code{"euclidean"} + shear for x-plane), and \code{"projective"} (+shear for y and z planes)
transformations.

For all rotation transformations, priors are uniform distribution within -π..π range.
}
\examples{
\dontrun{
# Geometric transformations of 2D data
euc2 <- fit_geometric_transformation_df(NakayaData[, 1:2], NakayaData[, 3:4],
  'euclidean')
euc3x <- fit_geometric_transformation_df(female_face_neutral,
  female_face_happy, "euclidean_x")
}
}
\seealso{
\code{\link{fit_geometric_transformation}}
}
